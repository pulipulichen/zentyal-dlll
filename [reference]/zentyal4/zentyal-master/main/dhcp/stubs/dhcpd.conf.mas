<%doc>
   This stub writes the DHCP server configuration file

Parameters:

    ifaces - Hash
    real_ifaces - Hash containing the interface name as key and an
                  array ref containing the virtual interface names as value
    thinClientOption - Boolean indicating whether the thin client
                       options have been used or not
    dnsone - String the default primary DNS server
    dnstwo - String the default secondary DNS server
    dynamicDNSEnabled - Boolean indicating whether the dynamic DNS feature is on or not
    keysFile - String with the file path to shared secret keys to update DNS server
    pidFile - String the path to the file which stores the daemon PID
</%doc>
<%args>
    %ifaces
    %real_ifaces
    $thinClientOption => 0
    $dnsone => ''
    $dnstwo => ''
    $dynamicDNSEnabled => 0
    $keysFile => undef
    $pidFile
</%args>
# DHCP server is authoritative for all networks
authoritative;

# extra options
# RFC3442 routes
option rfc3442-classless-static-routes code 121 = array of integer 8;
# MS routes
option ms-classless-static-routes code 249 = array of integer 8;

pid-file-name "<% $pidFile %>";

%       if ( $dynamicDNSEnabled ) {
ddns-update-style    interim;
ddns-updates         on;
update-static-leases on;
%       } else {
ddns-update-style none;
%       }

%	if(length($dnsone) != 0) {
option domain-name-servers <% $dnsone %>\
%		if(length($dnstwo) != 0) {
, <% $dnstwo %>;
% 		}else{
;
%		}
%	}

% if($thinClientOption) {
allow booting;
allow bootp;
% }

default-lease-time 1800;
max-lease-time 7200;

% if (defined $keysFile) {
include "<% $keysFile %>";
% }

% foreach my $iface (keys(%real_ifaces)) {
<%perl>
            # Write configuration if there are any range or fixed addresses
            my $ifaceToWrite = 0;
            if (exists $ifaces{$iface}) {
                if (@{$ifaces{$iface}->{ranges}} > 0) {
                    $ifaceToWrite = 1;
                } elsif  (values %{$ifaces{$iface}->{fixed}} > 0 ) {
                    $ifaceToWrite = 1;
                }
            }
</%perl>
%           if ( $ifaceToWrite ) {
        <& dhcp/shared-network.mas, iface => $iface, ifaces => \%ifaces &>
%           }
% }
