#!/usr/bin/perl
# Copyright (C) 2005-2007 Warp Networks S.L.
# Copyright (C) 2008-2013 Zentyal S.L.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

use strict;
use warnings;

use EBox;
use EBox::Global;
use EBox::Gettext;

use TryCatch::Lite;
use File::Slurp;

EBox::init();
my $global = EBox::Global->getInstance(1);
my $software = $global->modInstance('software');

my @pkgs;
try {
    $software->lock(by => 'ebox-software');
    $software->updatePkgList();

    #call listUpgradablePkgs even if we're not using them just now as this
    #causes the cache to be generated
    @pkgs = @{$software->listUpgradablePkgs(1)};
} catch ($e) {
    $software->unlock();
    $e->throw();
}
$software->unlock();
unless ($software->getAutomaticUpdates()) {
    exit 0;
}

try {
    $software->lock(by => 'ebox-software');
    my @pkgnames = ();
    foreach my $pkg (@pkgs) {
        push(@pkgnames, $pkg->{name});
    }

    if (@pkgnames) {
        $software->installPkgs(@pkgnames);
        # the installation has invalidated the previous packages list so we need to
        # regenerate the cache
        $software->listUpgradablePkgs(1);
    }
    $software->setAutoUpgradePkgNo(scalar(@pkgnames));
} catch ($e) {
    $software->unlock();
    $e->throw();
}
$software->unlock();

1;
