#!/usr/bin/perl
# Copyright (C) 2010-2013 Zentyal S.L.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

use strict;
use warnings;

# for performance we check first if there are pending operations
unless (grep { -d $_ } </var/lib/zentyal*/syncjournal/*>) {
    exit 0;
}

use EBox;
use EBox::Config;
use EBox::Global;
use EBox::Util::Lock;
use File::Basename;

use TryCatch::Lite;

use constant LOCK_NAME => 'zentyal-slave-sync';

my $mode = 'run';
if (($#ARGV == 0) and ($ARGV[0] eq '-l')) {
    $mode = 'list';
}

EBox::init();
my $users = EBox::Global->modInstance('samba');
$users->configured() or exit 0;

EBox::Util::Lock::lock(LOCK_NAME);

my $slaves = $users->allSlaves();
try {
    (@{$slaves}) or exit 0;
} catch {
    exit 0;
}

processDir($slaves, EBox::Config::home() . 'syncjournal/');

EBox::Util::Lock::unlock(LOCK_NAME);

exit 0;

sub processSlaveDir
{
    my ($slave, $dir) = @_;

    my $name = $slave->name;

    if ($mode eq 'list') {
        EBox::info("Slave: $name");
    }

    my $dh;
    opendir($dh, $dir) or
        die "Can't open the journal dir: $dir";

    my @files;
    while (defined(my $file = readdir($dh))) {
        (-d "$dir$file" and next);
        push(@files, $file);
    }
    closedir($dh);

    foreach my $file (sort(@files)) {
        processFile($slave, "$dir$file");
    }
}

sub processFile
{
    my ($slave, $file) = @_;

    if ($mode eq 'run') {
        EBox::info("Syncing $file...");
        $slave->syncFromFile($file);

    } elsif ($mode eq 'list') {
        my $name = basename($file);
        EBox::info(" * $name");
    }
}

sub processDir
{
    my ($slaves, $journaldir) = @_;

    unless (-d $journaldir) {
        EBox::info("Slave journal dir does not exist: $journaldir");
        return;
    }

    my $jdir;
    opendir($jdir, $journaldir) or die "Can't open the journal dir: $journaldir";

    foreach my $slave (@{$slaves}) {
        my $name = $slave->name();
        my $slavedir = "$journaldir/$name/";
        processSlaveDir($slave, $slavedir);
    }
    closedir($jdir);
}

1;
