<%args>
    $address
    $port
    $alive
    $enableError
    $errorURL
    $file

    $restarterIP
    $restarterPort

    $services
    $domainHash

    $redir
</%args>
% print "## Minimal sample pound.cfg\n";
% print "##\n";
% print "## see pound(8) for details\n";


% print "######################################################################\n";
% print "## global options:\n";

User		"www-data"
Group		"www-data"
% print "#RootJail	\"/chroot/pound\"\n";

% print "## Logging: (goes to syslog by default)\n";
% print "##	0	no logging\n";
% print "##	1	normal\n";
% print "##	2	extended\n";
% print "##	3	Apache-style (common log format)\n";
LogLevel	1

% print "## check backend every X secs:\n";
Alive		<% $alive %>
TimeOut		<% $alive %>

% print "## use hardware-accelleration card supported by openssl(1):\n";
% print "#SSLEngine	\"<hw>\"\n";

% print "# poundctl control socket\n";
Control "/var/run/pound/poundctl.socket"


% print "######################################################################\n";
% print "## listen, redirect and ... to:\n";

% print "## redirect all requests on port 8080 (\"ListenHTTP\") to the local webserver (see \"Service\" below):\n";
ListenHTTP
	Address <% $address %>
	Port	<% $port %>

% print "	## allow PUT and DELETE also (by default only GET, POST and HEAD)?:\n";
	xHTTP		0

% if ($enableError == 1) {
%
        Err414 "<% $file %>"
        Err500 "<% $file %>"
        Err501 "<% $file %>"
        Err503 "<% $file %>"
%
% } # if ($enableError == 1) {
% print "# -----------------------------------------\n";
% print "# Back End\n";
% print "# -----------------------------------------\n";

% print "#        Service\n";
% print "#                HeadRequire \"Host: dlll.nccu.edu.tw.*\"\n";
% print "#                BackEnd\n";
% print "#                        Address 192.168.1.31\n";
% print "#                        Port    80\n";
% print "#                End\n";
% print "#        End\n";
%
% my $size = keys %{$domainHash};
% if ($size > 0) {
% while (my ($domainNameValue, $backEndArray) = each ($domainHash)) {  	
%
        Service
                HeadRequire "Host: <% $domainNameValue %>.*"

% my @backEndArray = @{$backEndArray};
% my $backEndCount = $#backEndArray+1;
%
% #-----------------------------------------------
%
% if ( $backEndCount == 1 ) {
%   # 照以前的處理方法
%
%   for(my $i=0; $i<=$#backEndArray; $i++) {
%       my $service = $backEndArray[$i];
%       my $ipaddrValue = $service->{'ipaddrValue'};
%       my $portValue = $service->{'portValue'};
%
%       my $httpToHttpsValue = $service->{'httpToHttpsValue'};
%       my $httpsPortValue = $service->{'httpsPortValue'};
%
%       my $httpSecurityValue = $service->{'httpSecurityValue'};
%       my $httpPortValue = $service->{'httpPortValue'};
%
%   if ($httpToHttpsValue) {
%
                redirect "https://<% $domainNameValue %>:<% $httpsPortValue %>/"
%
%   }   #if ($httpToHttpsValue) {
%   elsif ($httpSecurityValue) {
%
                redirect "http://<% $domainNameValue %>:<% $httpPortValue %>/"
%
%   }   #if ($httpToHttpsValue) {
%   else {
%
		BackEnd
			Address	<% $ipaddrValue %>
			Port	<% $portValue %>
		End
%   
%   my $emergencyEnable = $service->{'emergencyValue'};
%   my $redirHTTP_enable = $service->{'redirHTTP_enable'};
%   if ( $emergencyEnable == 1 && $redirHTTP_enable == 1 ) {
                Emergency
			Address	<% $restarterIP %>
			Port	<% $restarterPort %>
		End
%   }
%
%   }   #else {
%
%   } # for(my $i=0; $i<=$#backEndArray; $i++) {
%
%
% #-----------------------------------------------
%
% } # if ( $backEndCount == 1 ) {
% else {
%   # 新的處理方式，只有BackEnd
%   my $emergencyEnable = 0;
%   for(my $i=0; $i<=$#backEndArray; $i++) {
%       my $service = $backEndArray[$i];
%       my $ipaddrValue = $service->{'ipaddrValue'};
%       my $portValue = $service->{'portValue'};
%       if ($service->{'emergencyValue'} == 1) {
%           $emergencyEnable = 1;
%       }
		BackEnd
			Address	<% $ipaddrValue %>
			Port	<% $portValue %>
		End
%   } # for(my $i=0; $i<=$#backEndArray; $i++) {
%   
%   if ($emergencyEnable == 1) {
                Emergency
			Address	<% $restarterIP %>
			Port	<% $restarterPort %>
		End
%   }
%
           Session
  	   	Type IP
		TTL 300
  	   End
% } # else {
%
        End
% } # while (my ($domainNameValue, $value) = each ($domainHash)) {  
% } #if ($size > 0) {

% print "# -----------------------------------------\n";
% print "# Redirect\n";
% print "# -----------------------------------------\n";

% print "#        Service\n";
% print "#                HeadRequire \"Host: test-redir.dlll.nccu.edu.tw.*\"\n";
% print "#                Redirect \"http://dlll.nccu.edu.tw\"\n";
% print "#        End\n";

% foreach my $r (@{$redir}) {
%   my $domainNameValue = $r->{'domainNameValue'};
%   my $urlValue = $r->{'urlValue'};
	Service
                HeadRequire "Host: <% $domainNameValue %>.*"
                redirect "<% $urlValue %>"
	End
% } #foreach my $r (@{$redir}) {

End
